# coding: utf-8

# flake8: noqa
"""
    Qdrant API

    API description for Qdrant vector search engine.  This document describes CRUD and search operations on collections of points (vectors with payload).  Qdrant supports any combinations of `should`, `must` and `must_not` conditions, which makes it possible to use in applications when object could not be described solely by vector. It could be location features, availability flags, and other custom properties businesses should take into account. ## Examples This examples cover the most basic use-cases - collection creation and basic vector search. ### Create collection First - let's create a collection with dot-production metric. ``` curl -X PUT 'http://localhost:6333/collections/test_collection' \\   -H 'Content-Type: application/json' \\   --data-raw '{     \"vectors\": {       \"size\": 4,       \"distance\": \"Dot\"     }   }'  ``` Expected response: ``` {     \"result\": true,     \"status\": \"ok\",     \"time\": 0.031095451 } ``` We can ensure that collection was created: ``` curl 'http://localhost:6333/collections/test_collection' ``` Expected response: ``` {   \"result\": {     \"status\": \"green\",     \"vectors_count\": 0,     \"segments_count\": 5,     \"disk_data_size\": 0,     \"ram_data_size\": 0,     \"config\": {       \"params\": {         \"vectors\": {           \"size\": 4,           \"distance\": \"Dot\"         }       },       \"hnsw_config\": {         \"m\": 16,         \"ef_construct\": 100,         \"full_scan_threshold\": 10000       },       \"optimizer_config\": {         \"deleted_threshold\": 0.2,         \"vacuum_min_vector_number\": 1000,         \"max_segment_number\": 5,         \"memmap_threshold\": 50000,         \"indexing_threshold\": 20000,         \"flush_interval_sec\": 1       },       \"wal_config\": {         \"wal_capacity_mb\": 32,         \"wal_segments_ahead\": 0       }     }   },   \"status\": \"ok\",   \"time\": 2.1199e-05 } ```  ### Add points Let's now add vectors with some payload: ``` curl -L -X PUT 'http://localhost:6333/collections/test_collection/points?wait=true' \\ -H 'Content-Type: application/json' \\ --data-raw '{   \"points\": [     {\"id\": 1, \"vector\": [0.05, 0.61, 0.76, 0.74], \"payload\": {\"city\": \"Berlin\"}},     {\"id\": 2, \"vector\": [0.19, 0.81, 0.75, 0.11], \"payload\": {\"city\": [\"Berlin\", \"London\"] }},     {\"id\": 3, \"vector\": [0.36, 0.55, 0.47, 0.94], \"payload\": {\"city\": [\"Berlin\", \"Moscow\"] }},     {\"id\": 4, \"vector\": [0.18, 0.01, 0.85, 0.80], \"payload\": {\"city\": [\"London\", \"Moscow\"] }},     {\"id\": 5, \"vector\": [0.24, 0.18, 0.22, 0.44], \"payload\": {\"count\": [0]}},     {\"id\": 6, \"vector\": [0.35, 0.08, 0.11, 0.44]}   ] }' ``` Expected response: ``` {     \"result\": {         \"operation_id\": 0,         \"status\": \"completed\"     },     \"status\": \"ok\",     \"time\": 0.000206061 } ``` ### Search with filtering Let's start with a basic request: ``` curl -L -X POST 'http://localhost:6333/collections/test_collection/points/search' \\ -H 'Content-Type: application/json' \\ --data-raw '{     \"vector\": [0.2,0.1,0.9,0.7],     \"top\": 3 }' ``` Expected response: ``` {     \"result\": [         { \"id\": 4, \"score\": 1.362, \"payload\": null, \"version\": 0 },         { \"id\": 1, \"score\": 1.273, \"payload\": null, \"version\": 0 },         { \"id\": 3, \"score\": 1.208, \"payload\": null, \"version\": 0 }     ],     \"status\": \"ok\",     \"time\": 0.000055785 } ``` But result is different if we add a filter: ``` curl -L -X POST 'http://localhost:6333/collections/test_collection/points/search' \\ -H 'Content-Type: application/json' \\ --data-raw '{     \"filter\": {         \"should\": [             {                 \"key\": \"city\",                 \"match\": {                     \"value\": \"London\"                 }             }         ]     },     \"vector\": [0.2, 0.1, 0.9, 0.7],     \"top\": 3 }' ``` Expected response: ``` {     \"result\": [         { \"id\": 4, \"score\": 1.362, \"payload\": null, \"version\": 0 },         { \"id\": 2, \"score\": 0.871, \"payload\": null, \"version\": 0 }     ],     \"status\": \"ok\",     \"time\": 0.000093972 } ``` 

    The version of the OpenAPI document: v1.7.x
    Contact: andrey@vasnetsov.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


# import models into model package
from openapi_client.models.abort_transfer_operation import AbortTransferOperation
from openapi_client.models.alias_description import AliasDescription
from openapi_client.models.alias_operations import AliasOperations
from openapi_client.models.any_variants import AnyVariants
from openapi_client.models.app_build_telemetry import AppBuildTelemetry
from openapi_client.models.app_features_telemetry import AppFeaturesTelemetry
from openapi_client.models.batch import Batch
from openapi_client.models.batch_payloads_inner import BatchPayloadsInner
from openapi_client.models.batch_update200_response import BatchUpdate200Response
from openapi_client.models.batch_vector_struct import BatchVectorStruct
from openapi_client.models.binary_quantization import BinaryQuantization
from openapi_client.models.binary_quantization_config import BinaryQuantizationConfig
from openapi_client.models.change_aliases_operation import ChangeAliasesOperation
from openapi_client.models.clear_payload_operation import ClearPayloadOperation
from openapi_client.models.cluster_config_telemetry import ClusterConfigTelemetry
from openapi_client.models.cluster_operations import ClusterOperations
from openapi_client.models.cluster_status import ClusterStatus
from openapi_client.models.cluster_status200_response import ClusterStatus200Response
from openapi_client.models.cluster_status_one_of import ClusterStatusOneOf
from openapi_client.models.cluster_status_one_of1 import ClusterStatusOneOf1
from openapi_client.models.cluster_status_telemetry import ClusterStatusTelemetry
from openapi_client.models.cluster_telemetry import ClusterTelemetry
from openapi_client.models.collection_cluster_info import CollectionClusterInfo
from openapi_client.models.collection_cluster_info200_response import CollectionClusterInfo200Response
from openapi_client.models.collection_config import CollectionConfig
from openapi_client.models.collection_description import CollectionDescription
from openapi_client.models.collection_info import CollectionInfo
from openapi_client.models.collection_params import CollectionParams
from openapi_client.models.collection_params_diff import CollectionParamsDiff
from openapi_client.models.collection_status import CollectionStatus
from openapi_client.models.collection_telemetry import CollectionTelemetry
from openapi_client.models.collection_telemetry_enum import CollectionTelemetryEnum
from openapi_client.models.collections_aggregated_telemetry import CollectionsAggregatedTelemetry
from openapi_client.models.collections_aliases_response import CollectionsAliasesResponse
from openapi_client.models.collections_response import CollectionsResponse
from openapi_client.models.collections_telemetry import CollectionsTelemetry
from openapi_client.models.compression_ratio import CompressionRatio
from openapi_client.models.condition import Condition
from openapi_client.models.consensus_config_telemetry import ConsensusConfigTelemetry
from openapi_client.models.consensus_thread_status import ConsensusThreadStatus
from openapi_client.models.consensus_thread_status_one_of import ConsensusThreadStatusOneOf
from openapi_client.models.consensus_thread_status_one_of1 import ConsensusThreadStatusOneOf1
from openapi_client.models.consensus_thread_status_one_of2 import ConsensusThreadStatusOneOf2
from openapi_client.models.context_example_pair import ContextExamplePair
from openapi_client.models.count_points200_response import CountPoints200Response
from openapi_client.models.count_request import CountRequest
from openapi_client.models.count_result import CountResult
from openapi_client.models.create_alias import CreateAlias
from openapi_client.models.create_alias_operation import CreateAliasOperation
from openapi_client.models.create_collection import CreateCollection
from openapi_client.models.create_field_index import CreateFieldIndex
from openapi_client.models.create_field_index200_response import CreateFieldIndex200Response
from openapi_client.models.create_shard_key200_response import CreateShardKey200Response
from openapi_client.models.create_sharding_key import CreateShardingKey
from openapi_client.models.create_sharding_key_operation import CreateShardingKeyOperation
from openapi_client.models.create_snapshot200_response import CreateSnapshot200Response
from openapi_client.models.delete_alias import DeleteAlias
from openapi_client.models.delete_alias_operation import DeleteAliasOperation
from openapi_client.models.delete_operation import DeleteOperation
from openapi_client.models.delete_payload import DeletePayload
from openapi_client.models.delete_payload_operation import DeletePayloadOperation
from openapi_client.models.delete_vectors import DeleteVectors
from openapi_client.models.delete_vectors_operation import DeleteVectorsOperation
from openapi_client.models.disabled import Disabled
from openapi_client.models.discover_request import DiscoverRequest
from openapi_client.models.discover_request_batch import DiscoverRequestBatch
from openapi_client.models.distance import Distance
from openapi_client.models.drop_replica_operation import DropReplicaOperation
from openapi_client.models.drop_sharding_key import DropShardingKey
from openapi_client.models.drop_sharding_key_operation import DropShardingKeyOperation
from openapi_client.models.error_response import ErrorResponse
from openapi_client.models.error_response_status import ErrorResponseStatus
from openapi_client.models.extended_point_id import ExtendedPointId
from openapi_client.models.field_condition import FieldCondition
from openapi_client.models.filter import Filter
from openapi_client.models.filter_selector import FilterSelector
from openapi_client.models.geo_bounding_box import GeoBoundingBox
from openapi_client.models.geo_line_string import GeoLineString
from openapi_client.models.geo_point import GeoPoint
from openapi_client.models.geo_polygon import GeoPolygon
from openapi_client.models.geo_radius import GeoRadius
from openapi_client.models.get_collection200_response import GetCollection200Response
from openapi_client.models.get_collection_aliases200_response import GetCollectionAliases200Response
from openapi_client.models.get_collections200_response import GetCollections200Response
from openapi_client.models.get_locks200_response import GetLocks200Response
from openapi_client.models.get_point200_response import GetPoint200Response
from openapi_client.models.get_points200_response import GetPoints200Response
from openapi_client.models.group_id import GroupId
from openapi_client.models.groups_result import GroupsResult
from openapi_client.models.grpc_telemetry import GrpcTelemetry
from openapi_client.models.has_id_condition import HasIdCondition
from openapi_client.models.hnsw_config import HnswConfig
from openapi_client.models.hnsw_config_diff import HnswConfigDiff
from openapi_client.models.indexes import Indexes
from openapi_client.models.indexes_one_of import IndexesOneOf
from openapi_client.models.indexes_one_of1 import IndexesOneOf1
from openapi_client.models.init_from import InitFrom
from openapi_client.models.is_empty_condition import IsEmptyCondition
from openapi_client.models.is_null_condition import IsNullCondition
from openapi_client.models.list_snapshots200_response import ListSnapshots200Response
from openapi_client.models.local_shard_info import LocalShardInfo
from openapi_client.models.local_shard_telemetry import LocalShardTelemetry
from openapi_client.models.locks_option import LocksOption
from openapi_client.models.lookup_location import LookupLocation
from openapi_client.models.match import Match
from openapi_client.models.match_any import MatchAny
from openapi_client.models.match_except import MatchExcept
from openapi_client.models.match_text import MatchText
from openapi_client.models.match_value import MatchValue
from openapi_client.models.message_send_errors import MessageSendErrors
from openapi_client.models.move_shard import MoveShard
from openapi_client.models.move_shard_operation import MoveShardOperation
from openapi_client.models.named_sparse_vector import NamedSparseVector
from openapi_client.models.named_vector import NamedVector
from openapi_client.models.named_vector_struct import NamedVectorStruct
from openapi_client.models.nested import Nested
from openapi_client.models.nested_condition import NestedCondition
from openapi_client.models.operation_duration_statistics import OperationDurationStatistics
from openapi_client.models.optimizer_telemetry import OptimizerTelemetry
from openapi_client.models.optimizers_config import OptimizersConfig
from openapi_client.models.optimizers_config_diff import OptimizersConfigDiff
from openapi_client.models.optimizers_status import OptimizersStatus
from openapi_client.models.optimizers_status_one_of import OptimizersStatusOneOf
from openapi_client.models.overwrite_payload_operation import OverwritePayloadOperation
from openapi_client.models.p2p_config_telemetry import P2pConfigTelemetry
from openapi_client.models.payload_field import PayloadField
from openapi_client.models.payload_field_schema import PayloadFieldSchema
from openapi_client.models.payload_index_info import PayloadIndexInfo
from openapi_client.models.payload_index_telemetry import PayloadIndexTelemetry
from openapi_client.models.payload_schema_type import PayloadSchemaType
from openapi_client.models.payload_selector import PayloadSelector
from openapi_client.models.payload_selector_exclude import PayloadSelectorExclude
from openapi_client.models.payload_selector_include import PayloadSelectorInclude
from openapi_client.models.payload_storage_type import PayloadStorageType
from openapi_client.models.payload_storage_type_one_of import PayloadStorageTypeOneOf
from openapi_client.models.payload_storage_type_one_of1 import PayloadStorageTypeOneOf1
from openapi_client.models.peer_info import PeerInfo
from openapi_client.models.point_group import PointGroup
from openapi_client.models.point_ids_list import PointIdsList
from openapi_client.models.point_insert_operations import PointInsertOperations
from openapi_client.models.point_request import PointRequest
from openapi_client.models.point_struct import PointStruct
from openapi_client.models.point_vectors import PointVectors
from openapi_client.models.points_batch import PointsBatch
from openapi_client.models.points_list import PointsList
from openapi_client.models.points_selector import PointsSelector
from openapi_client.models.product_quantization import ProductQuantization
from openapi_client.models.product_quantization_config import ProductQuantizationConfig
from openapi_client.models.quantization_config import QuantizationConfig
from openapi_client.models.quantization_config_diff import QuantizationConfigDiff
from openapi_client.models.quantization_search_params import QuantizationSearchParams
from openapi_client.models.raft_info import RaftInfo
from openapi_client.models.range import Range
from openapi_client.models.read_consistency import ReadConsistency
from openapi_client.models.read_consistency_type import ReadConsistencyType
from openapi_client.models.recommend_example import RecommendExample
from openapi_client.models.recommend_groups_request import RecommendGroupsRequest
from openapi_client.models.recommend_request import RecommendRequest
from openapi_client.models.recommend_request_batch import RecommendRequestBatch
from openapi_client.models.recommend_strategy import RecommendStrategy
from openapi_client.models.record import Record
from openapi_client.models.recover_from_uploaded_snapshot202_response import RecoverFromUploadedSnapshot202Response
from openapi_client.models.remote_shard_info import RemoteShardInfo
from openapi_client.models.remote_shard_telemetry import RemoteShardTelemetry
from openapi_client.models.rename_alias import RenameAlias
from openapi_client.models.rename_alias_operation import RenameAliasOperation
from openapi_client.models.replica import Replica
from openapi_client.models.replica_set_telemetry import ReplicaSetTelemetry
from openapi_client.models.replica_state import ReplicaState
from openapi_client.models.replicate_shard_operation import ReplicateShardOperation
from openapi_client.models.requests_telemetry import RequestsTelemetry
from openapi_client.models.running_environment_telemetry import RunningEnvironmentTelemetry
from openapi_client.models.scalar_quantization import ScalarQuantization
from openapi_client.models.scalar_quantization_config import ScalarQuantizationConfig
from openapi_client.models.scalar_type import ScalarType
from openapi_client.models.scored_point import ScoredPoint
from openapi_client.models.scroll_points200_response import ScrollPoints200Response
from openapi_client.models.scroll_request import ScrollRequest
from openapi_client.models.scroll_result import ScrollResult
from openapi_client.models.search_batch_points200_response import SearchBatchPoints200Response
from openapi_client.models.search_groups_request import SearchGroupsRequest
from openapi_client.models.search_params import SearchParams
from openapi_client.models.search_point_groups200_response import SearchPointGroups200Response
from openapi_client.models.search_points200_response import SearchPoints200Response
from openapi_client.models.search_request import SearchRequest
from openapi_client.models.search_request_batch import SearchRequestBatch
from openapi_client.models.segment_config import SegmentConfig
from openapi_client.models.segment_info import SegmentInfo
from openapi_client.models.segment_telemetry import SegmentTelemetry
from openapi_client.models.segment_type import SegmentType
from openapi_client.models.set_payload import SetPayload
from openapi_client.models.set_payload_operation import SetPayloadOperation
from openapi_client.models.shard_key import ShardKey
from openapi_client.models.shard_key_selector import ShardKeySelector
from openapi_client.models.shard_snapshot_location import ShardSnapshotLocation
from openapi_client.models.shard_snapshot_recover import ShardSnapshotRecover
from openapi_client.models.shard_transfer_info import ShardTransferInfo
from openapi_client.models.shard_transfer_method import ShardTransferMethod
from openapi_client.models.sharding_method import ShardingMethod
from openapi_client.models.snapshot_description import SnapshotDescription
from openapi_client.models.snapshot_priority import SnapshotPriority
from openapi_client.models.snapshot_recover import SnapshotRecover
from openapi_client.models.sparse_index_config import SparseIndexConfig
from openapi_client.models.sparse_index_params import SparseIndexParams
from openapi_client.models.sparse_index_type import SparseIndexType
from openapi_client.models.sparse_vector import SparseVector
from openapi_client.models.sparse_vector_data_config import SparseVectorDataConfig
from openapi_client.models.sparse_vector_params import SparseVectorParams
from openapi_client.models.state_role import StateRole
from openapi_client.models.telemetry200_response import Telemetry200Response
from openapi_client.models.telemetry_data import TelemetryData
from openapi_client.models.text_index_params import TextIndexParams
from openapi_client.models.text_index_type import TextIndexType
from openapi_client.models.tokenizer_type import TokenizerType
from openapi_client.models.tracker_status import TrackerStatus
from openapi_client.models.tracker_status_one_of import TrackerStatusOneOf
from openapi_client.models.tracker_status_one_of1 import TrackerStatusOneOf1
from openapi_client.models.tracker_telemetry import TrackerTelemetry
from openapi_client.models.update_collection import UpdateCollection
from openapi_client.models.update_operation import UpdateOperation
from openapi_client.models.update_operations import UpdateOperations
from openapi_client.models.update_result import UpdateResult
from openapi_client.models.update_status import UpdateStatus
from openapi_client.models.update_vectors import UpdateVectors
from openapi_client.models.update_vectors_operation import UpdateVectorsOperation
from openapi_client.models.upsert_operation import UpsertOperation
from openapi_client.models.value_variants import ValueVariants
from openapi_client.models.values_count import ValuesCount
from openapi_client.models.vector import Vector
from openapi_client.models.vector_data_config import VectorDataConfig
from openapi_client.models.vector_data_info import VectorDataInfo
from openapi_client.models.vector_index_searches_telemetry import VectorIndexSearchesTelemetry
from openapi_client.models.vector_params import VectorParams
from openapi_client.models.vector_params_diff import VectorParamsDiff
from openapi_client.models.vector_storage_type import VectorStorageType
from openapi_client.models.vector_struct import VectorStruct
from openapi_client.models.vectors_config import VectorsConfig
from openapi_client.models.wal_config import WalConfig
from openapi_client.models.wal_config_diff import WalConfigDiff
from openapi_client.models.web_api_telemetry import WebApiTelemetry
from openapi_client.models.with_lookup import WithLookup
from openapi_client.models.with_lookup_interface import WithLookupInterface
from openapi_client.models.with_payload_interface import WithPayloadInterface
from openapi_client.models.with_vector import WithVector
from openapi_client.models.write_ordering import WriteOrdering
